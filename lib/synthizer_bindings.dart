// AUTO GENERATED FILE, DO NOT EDIT.
//
// Generated by `package:ffigen`.
import 'dart:ffi' as ffi;

/// Bindings for the Synthizer audio library
class DartSynthizer {
  /// Holds the symbol lookup function.
  final ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
      _lookup;

  /// The symbols are looked up in [dynamicLibrary].
  DartSynthizer(ffi.DynamicLibrary dynamicLibrary)
      : _lookup = dynamicLibrary.lookup;

  /// The symbols are looked up with [lookup].
  DartSynthizer.fromLookup(
      ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
          lookup)
      : _lookup = lookup;

  void syz_eventDeinit(
    ffi.Pointer<syz_Event> event,
  ) {
    return _syz_eventDeinit(
      event,
    );
  }

  late final _syz_eventDeinit_ptr =
      _lookup<ffi.NativeFunction<_c_syz_eventDeinit>>('syz_eventDeinit');
  late final _dart_syz_eventDeinit _syz_eventDeinit =
      _syz_eventDeinit_ptr.asFunction<_dart_syz_eventDeinit>();

  void syz_libraryConfigSetDefaults(
    ffi.Pointer<syz_LibraryConfig> config,
  ) {
    return _syz_libraryConfigSetDefaults(
      config,
    );
  }

  late final _syz_libraryConfigSetDefaults_ptr =
      _lookup<ffi.NativeFunction<_c_syz_libraryConfigSetDefaults>>(
          'syz_libraryConfigSetDefaults');
  late final _dart_syz_libraryConfigSetDefaults _syz_libraryConfigSetDefaults =
      _syz_libraryConfigSetDefaults_ptr
          .asFunction<_dart_syz_libraryConfigSetDefaults>();

  int syz_initialize() {
    return _syz_initialize();
  }

  late final _syz_initialize_ptr =
      _lookup<ffi.NativeFunction<_c_syz_initialize>>('syz_initialize');
  late final _dart_syz_initialize _syz_initialize =
      _syz_initialize_ptr.asFunction<_dart_syz_initialize>();

  int syz_initializeWithConfig(
    ffi.Pointer<syz_LibraryConfig> config,
  ) {
    return _syz_initializeWithConfig(
      config,
    );
  }

  late final _syz_initializeWithConfig_ptr =
      _lookup<ffi.NativeFunction<_c_syz_initializeWithConfig>>(
          'syz_initializeWithConfig');
  late final _dart_syz_initializeWithConfig _syz_initializeWithConfig =
      _syz_initializeWithConfig_ptr
          .asFunction<_dart_syz_initializeWithConfig>();

  int syz_shutdown() {
    return _syz_shutdown();
  }

  late final _syz_shutdown_ptr =
      _lookup<ffi.NativeFunction<_c_syz_shutdown>>('syz_shutdown');
  late final _dart_syz_shutdown _syz_shutdown =
      _syz_shutdown_ptr.asFunction<_dart_syz_shutdown>();

  int syz_getLastErrorCode() {
    return _syz_getLastErrorCode();
  }

  late final _syz_getLastErrorCode_ptr =
      _lookup<ffi.NativeFunction<_c_syz_getLastErrorCode>>(
          'syz_getLastErrorCode');
  late final _dart_syz_getLastErrorCode _syz_getLastErrorCode =
      _syz_getLastErrorCode_ptr.asFunction<_dart_syz_getLastErrorCode>();

  ffi.Pointer<ffi.Int8> syz_getLastErrorMessage() {
    return _syz_getLastErrorMessage();
  }

  late final _syz_getLastErrorMessage_ptr =
      _lookup<ffi.NativeFunction<_c_syz_getLastErrorMessage>>(
          'syz_getLastErrorMessage');
  late final _dart_syz_getLastErrorMessage _syz_getLastErrorMessage =
      _syz_getLastErrorMessage_ptr.asFunction<_dart_syz_getLastErrorMessage>();

  int syz_handleIncRef(
    int handle,
  ) {
    return _syz_handleIncRef(
      handle,
    );
  }

  late final _syz_handleIncRef_ptr =
      _lookup<ffi.NativeFunction<_c_syz_handleIncRef>>('syz_handleIncRef');
  late final _dart_syz_handleIncRef _syz_handleIncRef =
      _syz_handleIncRef_ptr.asFunction<_dart_syz_handleIncRef>();

  int syz_handleDecRef(
    int handle,
  ) {
    return _syz_handleDecRef(
      handle,
    );
  }

  late final _syz_handleDecRef_ptr =
      _lookup<ffi.NativeFunction<_c_syz_handleDecRef>>('syz_handleDecRef');
  late final _dart_syz_handleDecRef _syz_handleDecRef =
      _syz_handleDecRef_ptr.asFunction<_dart_syz_handleDecRef>();

  void syz_initDeleteBehaviorConfig(
    ffi.Pointer<syz_DeleteBehaviorConfig> cfg,
  ) {
    return _syz_initDeleteBehaviorConfig(
      cfg,
    );
  }

  late final _syz_initDeleteBehaviorConfig_ptr =
      _lookup<ffi.NativeFunction<_c_syz_initDeleteBehaviorConfig>>(
          'syz_initDeleteBehaviorConfig');
  late final _dart_syz_initDeleteBehaviorConfig _syz_initDeleteBehaviorConfig =
      _syz_initDeleteBehaviorConfig_ptr
          .asFunction<_dart_syz_initDeleteBehaviorConfig>();

  int syz_configDeleteBehavior(
    int object,
    ffi.Pointer<syz_DeleteBehaviorConfig> cfg,
  ) {
    return _syz_configDeleteBehavior(
      object,
      cfg,
    );
  }

  late final _syz_configDeleteBehavior_ptr =
      _lookup<ffi.NativeFunction<_c_syz_configDeleteBehavior>>(
          'syz_configDeleteBehavior');
  late final _dart_syz_configDeleteBehavior _syz_configDeleteBehavior =
      _syz_configDeleteBehavior_ptr
          .asFunction<_dart_syz_configDeleteBehavior>();

  int syz_handleGetObjectType(
    ffi.Pointer<ffi.Int32> out,
    int handle,
  ) {
    return _syz_handleGetObjectType(
      out,
      handle,
    );
  }

  late final _syz_handleGetObjectType_ptr =
      _lookup<ffi.NativeFunction<_c_syz_handleGetObjectType>>(
          'syz_handleGetObjectType');
  late final _dart_syz_handleGetObjectType _syz_handleGetObjectType =
      _syz_handleGetObjectType_ptr.asFunction<_dart_syz_handleGetObjectType>();

  int syz_handleGetUserdata(
    ffi.Pointer<ffi.Pointer<ffi.Void>> out,
    int handle,
  ) {
    return _syz_handleGetUserdata(
      out,
      handle,
    );
  }

  late final _syz_handleGetUserdata_ptr =
      _lookup<ffi.NativeFunction<_c_syz_handleGetUserdata>>(
          'syz_handleGetUserdata');
  late final _dart_syz_handleGetUserdata _syz_handleGetUserdata =
      _syz_handleGetUserdata_ptr.asFunction<_dart_syz_handleGetUserdata>();

  int syz_handleSetUserdata(
    int handle,
    ffi.Pointer<ffi.Void> userdata,
    ffi.Pointer<ffi.NativeFunction<syz_UserdataFreeCallback>> free_callback,
  ) {
    return _syz_handleSetUserdata(
      handle,
      userdata,
      free_callback,
    );
  }

  late final _syz_handleSetUserdata_ptr =
      _lookup<ffi.NativeFunction<_c_syz_handleSetUserdata>>(
          'syz_handleSetUserdata');
  late final _dart_syz_handleSetUserdata _syz_handleSetUserdata =
      _syz_handleSetUserdata_ptr.asFunction<_dart_syz_handleSetUserdata>();

  int syz_pause(
    int object,
  ) {
    return _syz_pause(
      object,
    );
  }

  late final _syz_pause_ptr =
      _lookup<ffi.NativeFunction<_c_syz_pause>>('syz_pause');
  late final _dart_syz_pause _syz_pause =
      _syz_pause_ptr.asFunction<_dart_syz_pause>();

  int syz_play(
    int object,
  ) {
    return _syz_play(
      object,
    );
  }

  late final _syz_play_ptr =
      _lookup<ffi.NativeFunction<_c_syz_play>>('syz_play');
  late final _dart_syz_play _syz_play =
      _syz_play_ptr.asFunction<_dart_syz_play>();

  int syz_getI(
    ffi.Pointer<ffi.Int32> out,
    int target,
    int property,
  ) {
    return _syz_getI(
      out,
      target,
      property,
    );
  }

  late final _syz_getI_ptr =
      _lookup<ffi.NativeFunction<_c_syz_getI>>('syz_getI');
  late final _dart_syz_getI _syz_getI =
      _syz_getI_ptr.asFunction<_dart_syz_getI>();

  int syz_setI(
    int target,
    int property,
    int value,
  ) {
    return _syz_setI(
      target,
      property,
      value,
    );
  }

  late final _syz_setI_ptr =
      _lookup<ffi.NativeFunction<_c_syz_setI>>('syz_setI');
  late final _dart_syz_setI _syz_setI =
      _syz_setI_ptr.asFunction<_dart_syz_setI>();

  int syz_getD(
    ffi.Pointer<ffi.Double> out,
    int target,
    int property,
  ) {
    return _syz_getD(
      out,
      target,
      property,
    );
  }

  late final _syz_getD_ptr =
      _lookup<ffi.NativeFunction<_c_syz_getD>>('syz_getD');
  late final _dart_syz_getD _syz_getD =
      _syz_getD_ptr.asFunction<_dart_syz_getD>();

  int syz_setD(
    int target,
    int property,
    double value,
  ) {
    return _syz_setD(
      target,
      property,
      value,
    );
  }

  late final _syz_setD_ptr =
      _lookup<ffi.NativeFunction<_c_syz_setD>>('syz_setD');
  late final _dart_syz_setD _syz_setD =
      _syz_setD_ptr.asFunction<_dart_syz_setD>();

  int syz_setO(
    int target,
    int property,
    int value,
  ) {
    return _syz_setO(
      target,
      property,
      value,
    );
  }

  late final _syz_setO_ptr =
      _lookup<ffi.NativeFunction<_c_syz_setO>>('syz_setO');
  late final _dart_syz_setO _syz_setO =
      _syz_setO_ptr.asFunction<_dart_syz_setO>();

  int syz_getD3(
    ffi.Pointer<ffi.Double> x,
    ffi.Pointer<ffi.Double> y,
    ffi.Pointer<ffi.Double> z,
    int target,
    int property,
  ) {
    return _syz_getD3(
      x,
      y,
      z,
      target,
      property,
    );
  }

  late final _syz_getD3_ptr =
      _lookup<ffi.NativeFunction<_c_syz_getD3>>('syz_getD3');
  late final _dart_syz_getD3 _syz_getD3 =
      _syz_getD3_ptr.asFunction<_dart_syz_getD3>();

  int syz_setD3(
    int target,
    int property,
    double x,
    double y,
    double z,
  ) {
    return _syz_setD3(
      target,
      property,
      x,
      y,
      z,
    );
  }

  late final _syz_setD3_ptr =
      _lookup<ffi.NativeFunction<_c_syz_setD3>>('syz_setD3');
  late final _dart_syz_setD3 _syz_setD3 =
      _syz_setD3_ptr.asFunction<_dart_syz_setD3>();

  int syz_getD6(
    ffi.Pointer<ffi.Double> x1,
    ffi.Pointer<ffi.Double> y1,
    ffi.Pointer<ffi.Double> z1,
    ffi.Pointer<ffi.Double> x2,
    ffi.Pointer<ffi.Double> y2,
    ffi.Pointer<ffi.Double> z2,
    int target,
    int property,
  ) {
    return _syz_getD6(
      x1,
      y1,
      z1,
      x2,
      y2,
      z2,
      target,
      property,
    );
  }

  late final _syz_getD6_ptr =
      _lookup<ffi.NativeFunction<_c_syz_getD6>>('syz_getD6');
  late final _dart_syz_getD6 _syz_getD6 =
      _syz_getD6_ptr.asFunction<_dart_syz_getD6>();

  int syz_setD6(
    int handle,
    int property,
    double x1,
    double y1,
    double z1,
    double x2,
    double y2,
    double z2,
  ) {
    return _syz_setD6(
      handle,
      property,
      x1,
      y1,
      z1,
      x2,
      y2,
      z2,
    );
  }

  late final _syz_setD6_ptr =
      _lookup<ffi.NativeFunction<_c_syz_setD6>>('syz_setD6');
  late final _dart_syz_setD6 _syz_setD6 =
      _syz_setD6_ptr.asFunction<_dart_syz_setD6>();

  int syz_getBiquad(
    ffi.Pointer<syz_BiquadConfig> filter,
    int target,
    int property,
  ) {
    return _syz_getBiquad(
      filter,
      target,
      property,
    );
  }

  late final _syz_getBiquad_ptr =
      _lookup<ffi.NativeFunction<_c_syz_getBiquad>>('syz_getBiquad');
  late final _dart_syz_getBiquad _syz_getBiquad =
      _syz_getBiquad_ptr.asFunction<_dart_syz_getBiquad>();

  int syz_setBiquad(
    int target,
    int property,
    ffi.Pointer<syz_BiquadConfig> filter,
  ) {
    return _syz_setBiquad(
      target,
      property,
      filter,
    );
  }

  late final _syz_setBiquad_ptr =
      _lookup<ffi.NativeFunction<_c_syz_setBiquad>>('syz_setBiquad');
  late final _dart_syz_setBiquad _syz_setBiquad =
      _syz_setBiquad_ptr.asFunction<_dart_syz_setBiquad>();

  int syz_biquadDesignIdentity(
    ffi.Pointer<syz_BiquadConfig> filter,
  ) {
    return _syz_biquadDesignIdentity(
      filter,
    );
  }

  late final _syz_biquadDesignIdentity_ptr =
      _lookup<ffi.NativeFunction<_c_syz_biquadDesignIdentity>>(
          'syz_biquadDesignIdentity');
  late final _dart_syz_biquadDesignIdentity _syz_biquadDesignIdentity =
      _syz_biquadDesignIdentity_ptr
          .asFunction<_dart_syz_biquadDesignIdentity>();

  int syz_biquadDesignLowpass(
    ffi.Pointer<syz_BiquadConfig> filter,
    double frequency,
    double q,
  ) {
    return _syz_biquadDesignLowpass(
      filter,
      frequency,
      q,
    );
  }

  late final _syz_biquadDesignLowpass_ptr =
      _lookup<ffi.NativeFunction<_c_syz_biquadDesignLowpass>>(
          'syz_biquadDesignLowpass');
  late final _dart_syz_biquadDesignLowpass _syz_biquadDesignLowpass =
      _syz_biquadDesignLowpass_ptr.asFunction<_dart_syz_biquadDesignLowpass>();

  int syz_biquadDesignHighpass(
    ffi.Pointer<syz_BiquadConfig> filter,
    double frequency,
    double q,
  ) {
    return _syz_biquadDesignHighpass(
      filter,
      frequency,
      q,
    );
  }

  late final _syz_biquadDesignHighpass_ptr =
      _lookup<ffi.NativeFunction<_c_syz_biquadDesignHighpass>>(
          'syz_biquadDesignHighpass');
  late final _dart_syz_biquadDesignHighpass _syz_biquadDesignHighpass =
      _syz_biquadDesignHighpass_ptr
          .asFunction<_dart_syz_biquadDesignHighpass>();

  int syz_biquadDesignBandpass(
    ffi.Pointer<syz_BiquadConfig> filter,
    double frequency,
    double bw,
  ) {
    return _syz_biquadDesignBandpass(
      filter,
      frequency,
      bw,
    );
  }

  late final _syz_biquadDesignBandpass_ptr =
      _lookup<ffi.NativeFunction<_c_syz_biquadDesignBandpass>>(
          'syz_biquadDesignBandpass');
  late final _dart_syz_biquadDesignBandpass _syz_biquadDesignBandpass =
      _syz_biquadDesignBandpass_ptr
          .asFunction<_dart_syz_biquadDesignBandpass>();

  int syz_createContext(
    ffi.Pointer<ffi.Uint64> out,
    ffi.Pointer<ffi.Void> userdata,
    ffi.Pointer<ffi.NativeFunction<syz_UserdataFreeCallback>>
        userdata_free_callback,
  ) {
    return _syz_createContext(
      out,
      userdata,
      userdata_free_callback,
    );
  }

  late final _syz_createContext_ptr =
      _lookup<ffi.NativeFunction<_c_syz_createContext>>('syz_createContext');
  late final _dart_syz_createContext _syz_createContext =
      _syz_createContext_ptr.asFunction<_dart_syz_createContext>();

  int syz_createContextHeadless(
    ffi.Pointer<ffi.Uint64> out,
    ffi.Pointer<ffi.Void> userdata,
    ffi.Pointer<ffi.NativeFunction<syz_UserdataFreeCallback>>
        userdata_free_callback,
  ) {
    return _syz_createContextHeadless(
      out,
      userdata,
      userdata_free_callback,
    );
  }

  late final _syz_createContextHeadless_ptr =
      _lookup<ffi.NativeFunction<_c_syz_createContextHeadless>>(
          'syz_createContextHeadless');
  late final _dart_syz_createContextHeadless _syz_createContextHeadless =
      _syz_createContextHeadless_ptr
          .asFunction<_dart_syz_createContextHeadless>();

  int syz_contextGetBlock(
    int context,
    ffi.Pointer<ffi.Float> block,
  ) {
    return _syz_contextGetBlock(
      context,
      block,
    );
  }

  late final _syz_contextGetBlock_ptr =
      _lookup<ffi.NativeFunction<_c_syz_contextGetBlock>>(
          'syz_contextGetBlock');
  late final _dart_syz_contextGetBlock _syz_contextGetBlock =
      _syz_contextGetBlock_ptr.asFunction<_dart_syz_contextGetBlock>();

  int syz_contextEnableEvents(
    int context,
  ) {
    return _syz_contextEnableEvents(
      context,
    );
  }

  late final _syz_contextEnableEvents_ptr =
      _lookup<ffi.NativeFunction<_c_syz_contextEnableEvents>>(
          'syz_contextEnableEvents');
  late final _dart_syz_contextEnableEvents _syz_contextEnableEvents =
      _syz_contextEnableEvents_ptr.asFunction<_dart_syz_contextEnableEvents>();

  int syz_contextGetNextEvent(
    ffi.Pointer<syz_Event> out,
    int context,
    int flags,
  ) {
    return _syz_contextGetNextEvent(
      out,
      context,
      flags,
    );
  }

  late final _syz_contextGetNextEvent_ptr =
      _lookup<ffi.NativeFunction<_c_syz_contextGetNextEvent>>(
          'syz_contextGetNextEvent');
  late final _dart_syz_contextGetNextEvent _syz_contextGetNextEvent =
      _syz_contextGetNextEvent_ptr.asFunction<_dart_syz_contextGetNextEvent>();

  int syz_registerStreamProtocol(
    ffi.Pointer<ffi.Int8> protocol,
    ffi.Pointer<ffi.NativeFunction<syz_StreamOpenCallback>> callback,
    ffi.Pointer<ffi.Void> userdata,
  ) {
    return _syz_registerStreamProtocol(
      protocol,
      callback,
      userdata,
    );
  }

  late final _syz_registerStreamProtocol_ptr =
      _lookup<ffi.NativeFunction<_c_syz_registerStreamProtocol>>(
          'syz_registerStreamProtocol');
  late final _dart_syz_registerStreamProtocol _syz_registerStreamProtocol =
      _syz_registerStreamProtocol_ptr
          .asFunction<_dart_syz_registerStreamProtocol>();

  int syz_createStreamHandleFromStreamParams(
    ffi.Pointer<ffi.Uint64> out,
    ffi.Pointer<ffi.Int8> protocol,
    ffi.Pointer<ffi.Int8> path,
    ffi.Pointer<ffi.Void> param,
    ffi.Pointer<ffi.Void> userdata,
    ffi.Pointer<ffi.NativeFunction<syz_UserdataFreeCallback>>
        userdata_free_callback,
  ) {
    return _syz_createStreamHandleFromStreamParams(
      out,
      protocol,
      path,
      param,
      userdata,
      userdata_free_callback,
    );
  }

  late final _syz_createStreamHandleFromStreamParams_ptr =
      _lookup<ffi.NativeFunction<_c_syz_createStreamHandleFromStreamParams>>(
          'syz_createStreamHandleFromStreamParams');
  late final _dart_syz_createStreamHandleFromStreamParams
      _syz_createStreamHandleFromStreamParams =
      _syz_createStreamHandleFromStreamParams_ptr
          .asFunction<_dart_syz_createStreamHandleFromStreamParams>();

  int syz_createStreamHandleFromMemory(
    ffi.Pointer<ffi.Uint64> out,
    int data_len,
    ffi.Pointer<ffi.Int8> data,
    ffi.Pointer<ffi.Void> userdata,
    ffi.Pointer<ffi.NativeFunction<syz_UserdataFreeCallback>>
        userdata_free_callback,
  ) {
    return _syz_createStreamHandleFromMemory(
      out,
      data_len,
      data,
      userdata,
      userdata_free_callback,
    );
  }

  late final _syz_createStreamHandleFromMemory_ptr =
      _lookup<ffi.NativeFunction<_c_syz_createStreamHandleFromMemory>>(
          'syz_createStreamHandleFromMemory');
  late final _dart_syz_createStreamHandleFromMemory
      _syz_createStreamHandleFromMemory = _syz_createStreamHandleFromMemory_ptr
          .asFunction<_dart_syz_createStreamHandleFromMemory>();

  int syz_createStreamHandleFromFile(
    ffi.Pointer<ffi.Uint64> out,
    ffi.Pointer<ffi.Int8> path,
    ffi.Pointer<ffi.Void> userdata,
    ffi.Pointer<ffi.NativeFunction<syz_UserdataFreeCallback>>
        userdata_free_callback,
  ) {
    return _syz_createStreamHandleFromFile(
      out,
      path,
      userdata,
      userdata_free_callback,
    );
  }

  late final _syz_createStreamHandleFromFile_ptr =
      _lookup<ffi.NativeFunction<_c_syz_createStreamHandleFromFile>>(
          'syz_createStreamHandleFromFile');
  late final _dart_syz_createStreamHandleFromFile
      _syz_createStreamHandleFromFile = _syz_createStreamHandleFromFile_ptr
          .asFunction<_dart_syz_createStreamHandleFromFile>();

  int syz_createStreamHandleFromCustomStream(
    ffi.Pointer<ffi.Uint64> out,
    ffi.Pointer<syz_CustomStreamDef> callbacks,
    ffi.Pointer<ffi.Void> userdata,
    ffi.Pointer<ffi.NativeFunction<syz_UserdataFreeCallback>>
        userdata_free_callback,
  ) {
    return _syz_createStreamHandleFromCustomStream(
      out,
      callbacks,
      userdata,
      userdata_free_callback,
    );
  }

  late final _syz_createStreamHandleFromCustomStream_ptr =
      _lookup<ffi.NativeFunction<_c_syz_createStreamHandleFromCustomStream>>(
          'syz_createStreamHandleFromCustomStream');
  late final _dart_syz_createStreamHandleFromCustomStream
      _syz_createStreamHandleFromCustomStream =
      _syz_createStreamHandleFromCustomStream_ptr
          .asFunction<_dart_syz_createStreamHandleFromCustomStream>();

  int syz_createStreamingGeneratorFromStreamParams(
    ffi.Pointer<ffi.Uint64> out,
    int context,
    ffi.Pointer<ffi.Int8> protocol,
    ffi.Pointer<ffi.Int8> path,
    ffi.Pointer<ffi.Void> param,
    ffi.Pointer<ffi.Void> userdata,
    ffi.Pointer<ffi.NativeFunction<syz_UserdataFreeCallback>>
        userdata_free_callback,
  ) {
    return _syz_createStreamingGeneratorFromStreamParams(
      out,
      context,
      protocol,
      path,
      param,
      userdata,
      userdata_free_callback,
    );
  }

  late final _syz_createStreamingGeneratorFromStreamParams_ptr = _lookup<
          ffi.NativeFunction<_c_syz_createStreamingGeneratorFromStreamParams>>(
      'syz_createStreamingGeneratorFromStreamParams');
  late final _dart_syz_createStreamingGeneratorFromStreamParams
      _syz_createStreamingGeneratorFromStreamParams =
      _syz_createStreamingGeneratorFromStreamParams_ptr
          .asFunction<_dart_syz_createStreamingGeneratorFromStreamParams>();

  int syz_createStreamingGeneratorFromFile(
    ffi.Pointer<ffi.Uint64> out,
    int context,
    ffi.Pointer<ffi.Int8> path,
    ffi.Pointer<ffi.Void> userdata,
    ffi.Pointer<ffi.NativeFunction<syz_UserdataFreeCallback>>
        userdata_free_callback,
  ) {
    return _syz_createStreamingGeneratorFromFile(
      out,
      context,
      path,
      userdata,
      userdata_free_callback,
    );
  }

  late final _syz_createStreamingGeneratorFromFile_ptr =
      _lookup<ffi.NativeFunction<_c_syz_createStreamingGeneratorFromFile>>(
          'syz_createStreamingGeneratorFromFile');
  late final _dart_syz_createStreamingGeneratorFromFile
      _syz_createStreamingGeneratorFromFile =
      _syz_createStreamingGeneratorFromFile_ptr
          .asFunction<_dart_syz_createStreamingGeneratorFromFile>();

  int syz_createStreamingGeneratorFromStreamHandle(
    ffi.Pointer<ffi.Uint64> out,
    int context,
    int stream,
    ffi.Pointer<ffi.Void> userdata,
    ffi.Pointer<ffi.NativeFunction<syz_UserdataFreeCallback>>
        userdata_free_callback,
  ) {
    return _syz_createStreamingGeneratorFromStreamHandle(
      out,
      context,
      stream,
      userdata,
      userdata_free_callback,
    );
  }

  late final _syz_createStreamingGeneratorFromStreamHandle_ptr = _lookup<
          ffi.NativeFunction<_c_syz_createStreamingGeneratorFromStreamHandle>>(
      'syz_createStreamingGeneratorFromStreamHandle');
  late final _dart_syz_createStreamingGeneratorFromStreamHandle
      _syz_createStreamingGeneratorFromStreamHandle =
      _syz_createStreamingGeneratorFromStreamHandle_ptr
          .asFunction<_dart_syz_createStreamingGeneratorFromStreamHandle>();

  int syz_createBufferFromStreamParams(
    ffi.Pointer<ffi.Uint64> out,
    ffi.Pointer<ffi.Int8> protocol,
    ffi.Pointer<ffi.Int8> path,
    ffi.Pointer<ffi.Void> param,
    ffi.Pointer<ffi.Void> userdata,
    ffi.Pointer<ffi.NativeFunction<syz_UserdataFreeCallback>>
        userdata_free_callback,
  ) {
    return _syz_createBufferFromStreamParams(
      out,
      protocol,
      path,
      param,
      userdata,
      userdata_free_callback,
    );
  }

  late final _syz_createBufferFromStreamParams_ptr =
      _lookup<ffi.NativeFunction<_c_syz_createBufferFromStreamParams>>(
          'syz_createBufferFromStreamParams');
  late final _dart_syz_createBufferFromStreamParams
      _syz_createBufferFromStreamParams = _syz_createBufferFromStreamParams_ptr
          .asFunction<_dart_syz_createBufferFromStreamParams>();

  int syz_createBufferFromEncodedData(
    ffi.Pointer<ffi.Uint64> out,
    int data_len,
    ffi.Pointer<ffi.Int8> data,
    ffi.Pointer<ffi.Void> userdata,
    ffi.Pointer<ffi.NativeFunction<syz_UserdataFreeCallback>>
        userdata_free_callback,
  ) {
    return _syz_createBufferFromEncodedData(
      out,
      data_len,
      data,
      userdata,
      userdata_free_callback,
    );
  }

  late final _syz_createBufferFromEncodedData_ptr =
      _lookup<ffi.NativeFunction<_c_syz_createBufferFromEncodedData>>(
          'syz_createBufferFromEncodedData');
  late final _dart_syz_createBufferFromEncodedData
      _syz_createBufferFromEncodedData = _syz_createBufferFromEncodedData_ptr
          .asFunction<_dart_syz_createBufferFromEncodedData>();

  int syz_createBufferFromFloatArray(
    ffi.Pointer<ffi.Uint64> out,
    int sr,
    int channels,
    int frames,
    ffi.Pointer<ffi.Float> data,
    ffi.Pointer<ffi.Void> userdata,
    ffi.Pointer<ffi.NativeFunction<syz_UserdataFreeCallback>>
        userdata_free_callback,
  ) {
    return _syz_createBufferFromFloatArray(
      out,
      sr,
      channels,
      frames,
      data,
      userdata,
      userdata_free_callback,
    );
  }

  late final _syz_createBufferFromFloatArray_ptr =
      _lookup<ffi.NativeFunction<_c_syz_createBufferFromFloatArray>>(
          'syz_createBufferFromFloatArray');
  late final _dart_syz_createBufferFromFloatArray
      _syz_createBufferFromFloatArray = _syz_createBufferFromFloatArray_ptr
          .asFunction<_dart_syz_createBufferFromFloatArray>();

  int syz_createBufferFromFile(
    ffi.Pointer<ffi.Uint64> out,
    ffi.Pointer<ffi.Int8> path,
    ffi.Pointer<ffi.Void> userdata,
    ffi.Pointer<ffi.NativeFunction<syz_UserdataFreeCallback>>
        userdata_free_callback,
  ) {
    return _syz_createBufferFromFile(
      out,
      path,
      userdata,
      userdata_free_callback,
    );
  }

  late final _syz_createBufferFromFile_ptr =
      _lookup<ffi.NativeFunction<_c_syz_createBufferFromFile>>(
          'syz_createBufferFromFile');
  late final _dart_syz_createBufferFromFile _syz_createBufferFromFile =
      _syz_createBufferFromFile_ptr
          .asFunction<_dart_syz_createBufferFromFile>();

  int syz_createBufferFromStreamHandle(
    ffi.Pointer<ffi.Uint64> out,
    int stream,
    ffi.Pointer<ffi.Void> userdata,
    ffi.Pointer<ffi.NativeFunction<syz_UserdataFreeCallback>>
        userdata_free_callback,
  ) {
    return _syz_createBufferFromStreamHandle(
      out,
      stream,
      userdata,
      userdata_free_callback,
    );
  }

  late final _syz_createBufferFromStreamHandle_ptr =
      _lookup<ffi.NativeFunction<_c_syz_createBufferFromStreamHandle>>(
          'syz_createBufferFromStreamHandle');
  late final _dart_syz_createBufferFromStreamHandle
      _syz_createBufferFromStreamHandle = _syz_createBufferFromStreamHandle_ptr
          .asFunction<_dart_syz_createBufferFromStreamHandle>();

  int syz_bufferGetChannels(
    ffi.Pointer<ffi.Uint32> out,
    int buffer,
  ) {
    return _syz_bufferGetChannels(
      out,
      buffer,
    );
  }

  late final _syz_bufferGetChannels_ptr =
      _lookup<ffi.NativeFunction<_c_syz_bufferGetChannels>>(
          'syz_bufferGetChannels');
  late final _dart_syz_bufferGetChannels _syz_bufferGetChannels =
      _syz_bufferGetChannels_ptr.asFunction<_dart_syz_bufferGetChannels>();

  int syz_bufferGetLengthInSamples(
    ffi.Pointer<ffi.Uint32> out,
    int buffer,
  ) {
    return _syz_bufferGetLengthInSamples(
      out,
      buffer,
    );
  }

  late final _syz_bufferGetLengthInSamples_ptr =
      _lookup<ffi.NativeFunction<_c_syz_bufferGetLengthInSamples>>(
          'syz_bufferGetLengthInSamples');
  late final _dart_syz_bufferGetLengthInSamples _syz_bufferGetLengthInSamples =
      _syz_bufferGetLengthInSamples_ptr
          .asFunction<_dart_syz_bufferGetLengthInSamples>();

  int syz_bufferGetLengthInSeconds(
    ffi.Pointer<ffi.Double> out,
    int buffer,
  ) {
    return _syz_bufferGetLengthInSeconds(
      out,
      buffer,
    );
  }

  late final _syz_bufferGetLengthInSeconds_ptr =
      _lookup<ffi.NativeFunction<_c_syz_bufferGetLengthInSeconds>>(
          'syz_bufferGetLengthInSeconds');
  late final _dart_syz_bufferGetLengthInSeconds _syz_bufferGetLengthInSeconds =
      _syz_bufferGetLengthInSeconds_ptr
          .asFunction<_dart_syz_bufferGetLengthInSeconds>();

  int syz_createBufferGenerator(
    ffi.Pointer<ffi.Uint64> out,
    int context,
    ffi.Pointer<ffi.Void> userdata,
    ffi.Pointer<ffi.NativeFunction<syz_UserdataFreeCallback>>
        userdata_free_callback,
  ) {
    return _syz_createBufferGenerator(
      out,
      context,
      userdata,
      userdata_free_callback,
    );
  }

  late final _syz_createBufferGenerator_ptr =
      _lookup<ffi.NativeFunction<_c_syz_createBufferGenerator>>(
          'syz_createBufferGenerator');
  late final _dart_syz_createBufferGenerator _syz_createBufferGenerator =
      _syz_createBufferGenerator_ptr
          .asFunction<_dart_syz_createBufferGenerator>();

  int syz_sourceAddGenerator(
    int source,
    int generator,
  ) {
    return _syz_sourceAddGenerator(
      source,
      generator,
    );
  }

  late final _syz_sourceAddGenerator_ptr =
      _lookup<ffi.NativeFunction<_c_syz_sourceAddGenerator>>(
          'syz_sourceAddGenerator');
  late final _dart_syz_sourceAddGenerator _syz_sourceAddGenerator =
      _syz_sourceAddGenerator_ptr.asFunction<_dart_syz_sourceAddGenerator>();

  int syz_sourceRemoveGenerator(
    int source,
    int generator,
  ) {
    return _syz_sourceRemoveGenerator(
      source,
      generator,
    );
  }

  late final _syz_sourceRemoveGenerator_ptr =
      _lookup<ffi.NativeFunction<_c_syz_sourceRemoveGenerator>>(
          'syz_sourceRemoveGenerator');
  late final _dart_syz_sourceRemoveGenerator _syz_sourceRemoveGenerator =
      _syz_sourceRemoveGenerator_ptr
          .asFunction<_dart_syz_sourceRemoveGenerator>();

  int syz_createDirectSource(
    ffi.Pointer<ffi.Uint64> out,
    int context,
    ffi.Pointer<ffi.Void> userdata,
    ffi.Pointer<ffi.NativeFunction<syz_UserdataFreeCallback>>
        userdata_free_callback,
  ) {
    return _syz_createDirectSource(
      out,
      context,
      userdata,
      userdata_free_callback,
    );
  }

  late final _syz_createDirectSource_ptr =
      _lookup<ffi.NativeFunction<_c_syz_createDirectSource>>(
          'syz_createDirectSource');
  late final _dart_syz_createDirectSource _syz_createDirectSource =
      _syz_createDirectSource_ptr.asFunction<_dart_syz_createDirectSource>();

  int syz_createPannedSource(
    ffi.Pointer<ffi.Uint64> out,
    int context,
    ffi.Pointer<ffi.Void> userdata,
    ffi.Pointer<ffi.NativeFunction<syz_UserdataFreeCallback>>
        userdata_free_callback,
  ) {
    return _syz_createPannedSource(
      out,
      context,
      userdata,
      userdata_free_callback,
    );
  }

  late final _syz_createPannedSource_ptr =
      _lookup<ffi.NativeFunction<_c_syz_createPannedSource>>(
          'syz_createPannedSource');
  late final _dart_syz_createPannedSource _syz_createPannedSource =
      _syz_createPannedSource_ptr.asFunction<_dart_syz_createPannedSource>();

  int syz_createSource3D(
    ffi.Pointer<ffi.Uint64> out,
    int context,
    ffi.Pointer<ffi.Void> userdata,
    ffi.Pointer<ffi.NativeFunction<syz_UserdataFreeCallback>>
        userdata_free_callback,
  ) {
    return _syz_createSource3D(
      out,
      context,
      userdata,
      userdata_free_callback,
    );
  }

  late final _syz_createSource3D_ptr =
      _lookup<ffi.NativeFunction<_c_syz_createSource3D>>('syz_createSource3D');
  late final _dart_syz_createSource3D _syz_createSource3D =
      _syz_createSource3D_ptr.asFunction<_dart_syz_createSource3D>();

  int syz_createNoiseGenerator(
    ffi.Pointer<ffi.Uint64> out,
    int context,
    int channels,
    ffi.Pointer<ffi.Void> userdata,
    ffi.Pointer<ffi.NativeFunction<syz_UserdataFreeCallback>>
        userdata_free_callback,
  ) {
    return _syz_createNoiseGenerator(
      out,
      context,
      channels,
      userdata,
      userdata_free_callback,
    );
  }

  late final _syz_createNoiseGenerator_ptr =
      _lookup<ffi.NativeFunction<_c_syz_createNoiseGenerator>>(
          'syz_createNoiseGenerator');
  late final _dart_syz_createNoiseGenerator _syz_createNoiseGenerator =
      _syz_createNoiseGenerator_ptr
          .asFunction<_dart_syz_createNoiseGenerator>();

  int syz_initRouteConfig(
    ffi.Pointer<syz_RouteConfig> cfg,
  ) {
    return _syz_initRouteConfig(
      cfg,
    );
  }

  late final _syz_initRouteConfig_ptr =
      _lookup<ffi.NativeFunction<_c_syz_initRouteConfig>>(
          'syz_initRouteConfig');
  late final _dart_syz_initRouteConfig _syz_initRouteConfig =
      _syz_initRouteConfig_ptr.asFunction<_dart_syz_initRouteConfig>();

  int syz_routingConfigRoute(
    int context,
    int output,
    int input,
    ffi.Pointer<syz_RouteConfig> config,
  ) {
    return _syz_routingConfigRoute(
      context,
      output,
      input,
      config,
    );
  }

  late final _syz_routingConfigRoute_ptr =
      _lookup<ffi.NativeFunction<_c_syz_routingConfigRoute>>(
          'syz_routingConfigRoute');
  late final _dart_syz_routingConfigRoute _syz_routingConfigRoute =
      _syz_routingConfigRoute_ptr.asFunction<_dart_syz_routingConfigRoute>();

  int syz_routingRemoveRoute(
    int context,
    int output,
    int input,
    double fade_out,
  ) {
    return _syz_routingRemoveRoute(
      context,
      output,
      input,
      fade_out,
    );
  }

  late final _syz_routingRemoveRoute_ptr =
      _lookup<ffi.NativeFunction<_c_syz_routingRemoveRoute>>(
          'syz_routingRemoveRoute');
  late final _dart_syz_routingRemoveRoute _syz_routingRemoveRoute =
      _syz_routingRemoveRoute_ptr.asFunction<_dart_syz_routingRemoveRoute>();

  int syz_effectReset(
    int effect,
  ) {
    return _syz_effectReset(
      effect,
    );
  }

  late final _syz_effectReset_ptr =
      _lookup<ffi.NativeFunction<_c_syz_effectReset>>('syz_effectReset');
  late final _dart_syz_effectReset _syz_effectReset =
      _syz_effectReset_ptr.asFunction<_dart_syz_effectReset>();

  int syz_createGlobalEcho(
    ffi.Pointer<ffi.Uint64> out,
    int context,
    ffi.Pointer<ffi.Void> userdata,
    ffi.Pointer<ffi.NativeFunction<syz_UserdataFreeCallback>>
        userdata_free_callback,
  ) {
    return _syz_createGlobalEcho(
      out,
      context,
      userdata,
      userdata_free_callback,
    );
  }

  late final _syz_createGlobalEcho_ptr =
      _lookup<ffi.NativeFunction<_c_syz_createGlobalEcho>>(
          'syz_createGlobalEcho');
  late final _dart_syz_createGlobalEcho _syz_createGlobalEcho =
      _syz_createGlobalEcho_ptr.asFunction<_dart_syz_createGlobalEcho>();

  int syz_globalEchoSetTaps(
    int handle,
    int n_taps,
    ffi.Pointer<syz_EchoTapConfig> taps,
  ) {
    return _syz_globalEchoSetTaps(
      handle,
      n_taps,
      taps,
    );
  }

  late final _syz_globalEchoSetTaps_ptr =
      _lookup<ffi.NativeFunction<_c_syz_globalEchoSetTaps>>(
          'syz_globalEchoSetTaps');
  late final _dart_syz_globalEchoSetTaps _syz_globalEchoSetTaps =
      _syz_globalEchoSetTaps_ptr.asFunction<_dart_syz_globalEchoSetTaps>();

  int syz_createGlobalFdnReverb(
    ffi.Pointer<ffi.Uint64> out,
    int context,
    ffi.Pointer<ffi.Void> userdata,
    ffi.Pointer<ffi.NativeFunction<syz_UserdataFreeCallback>>
        userdata_free_callback,
  ) {
    return _syz_createGlobalFdnReverb(
      out,
      context,
      userdata,
      userdata_free_callback,
    );
  }

  late final _syz_createGlobalFdnReverb_ptr =
      _lookup<ffi.NativeFunction<_c_syz_createGlobalFdnReverb>>(
          'syz_createGlobalFdnReverb');
  late final _dart_syz_createGlobalFdnReverb _syz_createGlobalFdnReverb =
      _syz_createGlobalFdnReverb_ptr
          .asFunction<_dart_syz_createGlobalFdnReverb>();
}

class syz_Event extends ffi.Struct {
  @ffi.Int32()
  external int type;

  @ffi.Uint64()
  external int source;

  @ffi.Uint64()
  external int context;
}

abstract class SYZ_LOGGING_BACKEND {
  static const int SYZ_LOGGING_BACKEND_NONE = 0;
  static const int SYZ_LOGGING_BACKEND_STDERR = 1;
}

abstract class SYZ_LOG_LEVEL {
  static const int SYZ_LOG_LEVEL_ERROR = 0;
  static const int SYZ_LOG_LEVEL_WARN = 10;
  static const int SYZ_LOG_LEVEL_INFO = 20;
  static const int SYZ_LOG_LEVEL_DEBUG = 30;
}

class syz_LibraryConfig extends ffi.Struct {
  @ffi.Uint32()
  external int log_level;

  @ffi.Uint32()
  external int logging_backend;

  external ffi.Pointer<ffi.Int8> libsndfile_path;
}

class syz_DeleteBehaviorConfig extends ffi.Struct {
  @ffi.Int32()
  external int linger;

  @ffi.Double()
  external double linger_timeout;
}

class syz_BiquadConfig extends ffi.Struct {
  @ffi.Double()
  external double _b0;

  @ffi.Double()
  external double _b1;

  @ffi.Double()
  external double _b2;

  @ffi.Double()
  external double _a1;

  @ffi.Double()
  external double _a2;

  @ffi.Double()
  external double _gain;

  @ffi.Uint8()
  external int _is_wire;
}

class syz_CustomStreamDef extends ffi.Struct {
  external ffi.Pointer<ffi.NativeFunction<syz_StreamReadCallback>> read_cb;

  external ffi.Pointer<ffi.NativeFunction<syz_StreamSeekCallback>> seek_cb;

  external ffi.Pointer<ffi.NativeFunction<syz_StreamCloseCallback>> close_cb;

  external ffi.Pointer<ffi.NativeFunction<syz_StreamDestroyCallback>>
      destroy_cb;

  @ffi.Int64()
  external int length;

  external ffi.Pointer<ffi.Void> userdata;
}

class syz_RouteConfig extends ffi.Struct {
  @ffi.Double()
  external double gain;

  @ffi.Double()
  external double fade_time;

  external syz_BiquadConfig filter;
}

class syz_EchoTapConfig extends ffi.Struct {
  @ffi.Double()
  external double delay;

  @ffi.Double()
  external double gain_l;

  @ffi.Double()
  external double gain_r;
}

abstract class SYZ_OBJECT_TYPE {
  static const int SYZ_OTYPE_CONTEXT = 0;
  static const int SYZ_OTYPE_BUFFER = 1;
  static const int SYZ_OTYPE_BUFFER_GENERATOR = 2;
  static const int SYZ_OTYPE_STREAMING_GENERATOR = 3;
  static const int SYZ_OTYPE_NOISE_GENERATOR = 4;
  static const int SYZ_OTYPE_DIRECT_SOURCE = 5;
  static const int SYZ_OTYPE_PANNED_SOURCE = 6;
  static const int SYZ_OTYPE_SOURCE_3D = 7;
  static const int SYZ_OTYPE_GLOBAL_ECHO = 8;
  static const int SYZ_OTYPE_GLOBAL_FDN_REVERB = 9;
  static const int SYZ_OTYPE_STREAM_HANDLE = 10;
}

abstract class SYZ_PANNER_STRATEGY {
  static const int SYZ_PANNER_STRATEGY_HRTF = 0;
  static const int SYZ_PANNER_STRATEGY_STEREO = 1;
  static const int SYZ_PANNER_STRATEGY_COUNT = 2;
}

abstract class SYZ_DISTANCE_MODEL {
  static const int SYZ_DISTANCE_MODEL_NONE = 0;
  static const int SYZ_DISTANCE_MODEL_LINEAR = 1;
  static const int SYZ_DISTANCE_MODEL_EXPONENTIAL = 2;
  static const int SYZ_DISTANCE_MODEL_INVERSE = 3;
  static const int SYZ_DISTANCE_MODEL_COUNT = 4;
}

abstract class SYZ_NOISE_TYPE {
  static const int SYZ_NOISE_TYPE_UNIFORM = 0;
  static const int SYZ_NOISE_TYPE_VM = 1;
  static const int SYZ_NOISE_TYPE_FILTERED_BROWN = 2;
  static const int SYZ_NOISE_TYPE_COUNT = 3;
}

abstract class SYZ_PROPERTIES {
  static const int SYZ_P_AZIMUTH = 0;
  static const int SYZ_P_BUFFER = 1;
  static const int SYZ_P_ELEVATION = 2;
  static const int SYZ_P_GAIN = 3;
  static const int SYZ_P_PANNER_STRATEGY = 4;
  static const int SYZ_P_DEFAULT_PANNER_STRATEGY = 5;
  static const int SYZ_P_PANNING_SCALAR = 6;
  static const int SYZ_P_PLAYBACK_POSITION = 7;
  static const int SYZ_P_POSITION = 8;
  static const int SYZ_P_ORIENTATION = 9;
  static const int SYZ_P_CLOSENESS_BOOST = 10;
  static const int SYZ_P_CLOSENESS_BOOST_DISTANCE = 11;
  static const int SYZ_P_DISTANCE_MAX = 12;
  static const int SYZ_P_DISTANCE_MODEL = 13;
  static const int SYZ_P_DISTANCE_REF = 14;
  static const int SYZ_P_ROLLOFF = 15;
  static const int SYZ_P_DEFAULT_CLOSENESS_BOOST = 16;
  static const int SYZ_P_DEFAULT_CLOSENESS_BOOST_DISTANCE = 17;
  static const int SYZ_P_DEFAULT_DISTANCE_MAX = 18;
  static const int SYZ_P_DEFAULT_DISTANCE_MODEL = 19;
  static const int SYZ_P_DEFAULT_DISTANCE_REF = 20;
  static const int SYZ_P_DEFAULT_ROLLOFF = 21;
  static const int SYZ_P_LOOPING = 22;
  static const int SYZ_P_NOISE_TYPE = 23;
  static const int SYZ_P_PITCH_BEND = 24;
  static const int SYZ_P_INPUT_FILTER_ENABLED = 25;
  static const int SYZ_P_INPUT_FILTER_CUTOFF = 26;
  static const int SYZ_P_MEAN_FREE_PATH = 27;
  static const int SYZ_P_T60 = 28;
  static const int SYZ_P_LATE_REFLECTIONS_LF_ROLLOFF = 29;
  static const int SYZ_P_LATE_REFLECTIONS_LF_REFERENCE = 30;
  static const int SYZ_P_LATE_REFLECTIONS_HF_ROLLOFF = 31;
  static const int SYZ_P_LATE_REFLECTIONS_HF_REFERENCE = 32;
  static const int SYZ_P_LATE_REFLECTIONS_DIFFUSION = 33;
  static const int SYZ_P_LATE_REFLECTIONS_MODULATION_DEPTH = 34;
  static const int SYZ_P_LATE_REFLECTIONS_MODULATION_FREQUENCY = 35;
  static const int SYZ_P_LATE_REFLECTIONS_DELAY = 36;
  static const int SYZ_P_FILTER = 37;
  static const int SYZ_P_FILTER_DIRECT = 38;
  static const int SYZ_P_FILTER_EFFECTS = 39;
  static const int SYZ_P_FILTER_INPUT = 40;
}

abstract class SYZ_EVENT_TYPES {
  static const int SYZ_EVENT_TYPE_INVALID = 0;
  static const int SYZ_EVENT_TYPE_LOOPED = 1;
  static const int SYZ_EVENT_TYPE_FINISHED = 2;
}

typedef _c_syz_eventDeinit = ffi.Void Function(
  ffi.Pointer<syz_Event> event,
);

typedef _dart_syz_eventDeinit = void Function(
  ffi.Pointer<syz_Event> event,
);

typedef _c_syz_libraryConfigSetDefaults = ffi.Void Function(
  ffi.Pointer<syz_LibraryConfig> config,
);

typedef _dart_syz_libraryConfigSetDefaults = void Function(
  ffi.Pointer<syz_LibraryConfig> config,
);

typedef _c_syz_initialize = ffi.Int32 Function();

typedef _dart_syz_initialize = int Function();

typedef _c_syz_initializeWithConfig = ffi.Int32 Function(
  ffi.Pointer<syz_LibraryConfig> config,
);

typedef _dart_syz_initializeWithConfig = int Function(
  ffi.Pointer<syz_LibraryConfig> config,
);

typedef _c_syz_shutdown = ffi.Int32 Function();

typedef _dart_syz_shutdown = int Function();

typedef _c_syz_getLastErrorCode = ffi.Int32 Function();

typedef _dart_syz_getLastErrorCode = int Function();

typedef _c_syz_getLastErrorMessage = ffi.Pointer<ffi.Int8> Function();

typedef _dart_syz_getLastErrorMessage = ffi.Pointer<ffi.Int8> Function();

typedef _c_syz_handleIncRef = ffi.Int32 Function(
  ffi.Uint64 handle,
);

typedef _dart_syz_handleIncRef = int Function(
  int handle,
);

typedef _c_syz_handleDecRef = ffi.Int32 Function(
  ffi.Uint64 handle,
);

typedef _dart_syz_handleDecRef = int Function(
  int handle,
);

typedef _c_syz_initDeleteBehaviorConfig = ffi.Void Function(
  ffi.Pointer<syz_DeleteBehaviorConfig> cfg,
);

typedef _dart_syz_initDeleteBehaviorConfig = void Function(
  ffi.Pointer<syz_DeleteBehaviorConfig> cfg,
);

typedef _c_syz_configDeleteBehavior = ffi.Int32 Function(
  ffi.Uint64 object,
  ffi.Pointer<syz_DeleteBehaviorConfig> cfg,
);

typedef _dart_syz_configDeleteBehavior = int Function(
  int object,
  ffi.Pointer<syz_DeleteBehaviorConfig> cfg,
);

typedef _c_syz_handleGetObjectType = ffi.Int32 Function(
  ffi.Pointer<ffi.Int32> out,
  ffi.Uint64 handle,
);

typedef _dart_syz_handleGetObjectType = int Function(
  ffi.Pointer<ffi.Int32> out,
  int handle,
);

typedef _c_syz_handleGetUserdata = ffi.Int32 Function(
  ffi.Pointer<ffi.Pointer<ffi.Void>> out,
  ffi.Uint64 handle,
);

typedef _dart_syz_handleGetUserdata = int Function(
  ffi.Pointer<ffi.Pointer<ffi.Void>> out,
  int handle,
);

typedef syz_UserdataFreeCallback = ffi.Void Function(
  ffi.Pointer<ffi.Void>,
);

typedef _c_syz_handleSetUserdata = ffi.Int32 Function(
  ffi.Uint64 handle,
  ffi.Pointer<ffi.Void> userdata,
  ffi.Pointer<ffi.NativeFunction<syz_UserdataFreeCallback>> free_callback,
);

typedef _dart_syz_handleSetUserdata = int Function(
  int handle,
  ffi.Pointer<ffi.Void> userdata,
  ffi.Pointer<ffi.NativeFunction<syz_UserdataFreeCallback>> free_callback,
);

typedef _c_syz_pause = ffi.Int32 Function(
  ffi.Uint64 object,
);

typedef _dart_syz_pause = int Function(
  int object,
);

typedef _c_syz_play = ffi.Int32 Function(
  ffi.Uint64 object,
);

typedef _dart_syz_play = int Function(
  int object,
);

typedef _c_syz_getI = ffi.Int32 Function(
  ffi.Pointer<ffi.Int32> out,
  ffi.Uint64 target,
  ffi.Int32 property,
);

typedef _dart_syz_getI = int Function(
  ffi.Pointer<ffi.Int32> out,
  int target,
  int property,
);

typedef _c_syz_setI = ffi.Int32 Function(
  ffi.Uint64 target,
  ffi.Int32 property,
  ffi.Int32 value,
);

typedef _dart_syz_setI = int Function(
  int target,
  int property,
  int value,
);

typedef _c_syz_getD = ffi.Int32 Function(
  ffi.Pointer<ffi.Double> out,
  ffi.Uint64 target,
  ffi.Int32 property,
);

typedef _dart_syz_getD = int Function(
  ffi.Pointer<ffi.Double> out,
  int target,
  int property,
);

typedef _c_syz_setD = ffi.Int32 Function(
  ffi.Uint64 target,
  ffi.Int32 property,
  ffi.Double value,
);

typedef _dart_syz_setD = int Function(
  int target,
  int property,
  double value,
);

typedef _c_syz_setO = ffi.Int32 Function(
  ffi.Uint64 target,
  ffi.Int32 property,
  ffi.Uint64 value,
);

typedef _dart_syz_setO = int Function(
  int target,
  int property,
  int value,
);

typedef _c_syz_getD3 = ffi.Int32 Function(
  ffi.Pointer<ffi.Double> x,
  ffi.Pointer<ffi.Double> y,
  ffi.Pointer<ffi.Double> z,
  ffi.Uint64 target,
  ffi.Int32 property,
);

typedef _dart_syz_getD3 = int Function(
  ffi.Pointer<ffi.Double> x,
  ffi.Pointer<ffi.Double> y,
  ffi.Pointer<ffi.Double> z,
  int target,
  int property,
);

typedef _c_syz_setD3 = ffi.Int32 Function(
  ffi.Uint64 target,
  ffi.Int32 property,
  ffi.Double x,
  ffi.Double y,
  ffi.Double z,
);

typedef _dart_syz_setD3 = int Function(
  int target,
  int property,
  double x,
  double y,
  double z,
);

typedef _c_syz_getD6 = ffi.Int32 Function(
  ffi.Pointer<ffi.Double> x1,
  ffi.Pointer<ffi.Double> y1,
  ffi.Pointer<ffi.Double> z1,
  ffi.Pointer<ffi.Double> x2,
  ffi.Pointer<ffi.Double> y2,
  ffi.Pointer<ffi.Double> z2,
  ffi.Uint64 target,
  ffi.Int32 property,
);

typedef _dart_syz_getD6 = int Function(
  ffi.Pointer<ffi.Double> x1,
  ffi.Pointer<ffi.Double> y1,
  ffi.Pointer<ffi.Double> z1,
  ffi.Pointer<ffi.Double> x2,
  ffi.Pointer<ffi.Double> y2,
  ffi.Pointer<ffi.Double> z2,
  int target,
  int property,
);

typedef _c_syz_setD6 = ffi.Int32 Function(
  ffi.Uint64 handle,
  ffi.Int32 property,
  ffi.Double x1,
  ffi.Double y1,
  ffi.Double z1,
  ffi.Double x2,
  ffi.Double y2,
  ffi.Double z2,
);

typedef _dart_syz_setD6 = int Function(
  int handle,
  int property,
  double x1,
  double y1,
  double z1,
  double x2,
  double y2,
  double z2,
);

typedef _c_syz_getBiquad = ffi.Int32 Function(
  ffi.Pointer<syz_BiquadConfig> filter,
  ffi.Uint64 target,
  ffi.Int32 property,
);

typedef _dart_syz_getBiquad = int Function(
  ffi.Pointer<syz_BiquadConfig> filter,
  int target,
  int property,
);

typedef _c_syz_setBiquad = ffi.Int32 Function(
  ffi.Uint64 target,
  ffi.Int32 property,
  ffi.Pointer<syz_BiquadConfig> filter,
);

typedef _dart_syz_setBiquad = int Function(
  int target,
  int property,
  ffi.Pointer<syz_BiquadConfig> filter,
);

typedef _c_syz_biquadDesignIdentity = ffi.Int32 Function(
  ffi.Pointer<syz_BiquadConfig> filter,
);

typedef _dart_syz_biquadDesignIdentity = int Function(
  ffi.Pointer<syz_BiquadConfig> filter,
);

typedef _c_syz_biquadDesignLowpass = ffi.Int32 Function(
  ffi.Pointer<syz_BiquadConfig> filter,
  ffi.Double frequency,
  ffi.Double q,
);

typedef _dart_syz_biquadDesignLowpass = int Function(
  ffi.Pointer<syz_BiquadConfig> filter,
  double frequency,
  double q,
);

typedef _c_syz_biquadDesignHighpass = ffi.Int32 Function(
  ffi.Pointer<syz_BiquadConfig> filter,
  ffi.Double frequency,
  ffi.Double q,
);

typedef _dart_syz_biquadDesignHighpass = int Function(
  ffi.Pointer<syz_BiquadConfig> filter,
  double frequency,
  double q,
);

typedef _c_syz_biquadDesignBandpass = ffi.Int32 Function(
  ffi.Pointer<syz_BiquadConfig> filter,
  ffi.Double frequency,
  ffi.Double bw,
);

typedef _dart_syz_biquadDesignBandpass = int Function(
  ffi.Pointer<syz_BiquadConfig> filter,
  double frequency,
  double bw,
);

typedef _c_syz_createContext = ffi.Int32 Function(
  ffi.Pointer<ffi.Uint64> out,
  ffi.Pointer<ffi.Void> userdata,
  ffi.Pointer<ffi.NativeFunction<syz_UserdataFreeCallback>>
      userdata_free_callback,
);

typedef _dart_syz_createContext = int Function(
  ffi.Pointer<ffi.Uint64> out,
  ffi.Pointer<ffi.Void> userdata,
  ffi.Pointer<ffi.NativeFunction<syz_UserdataFreeCallback>>
      userdata_free_callback,
);

typedef _c_syz_createContextHeadless = ffi.Int32 Function(
  ffi.Pointer<ffi.Uint64> out,
  ffi.Pointer<ffi.Void> userdata,
  ffi.Pointer<ffi.NativeFunction<syz_UserdataFreeCallback>>
      userdata_free_callback,
);

typedef _dart_syz_createContextHeadless = int Function(
  ffi.Pointer<ffi.Uint64> out,
  ffi.Pointer<ffi.Void> userdata,
  ffi.Pointer<ffi.NativeFunction<syz_UserdataFreeCallback>>
      userdata_free_callback,
);

typedef _c_syz_contextGetBlock = ffi.Int32 Function(
  ffi.Uint64 context,
  ffi.Pointer<ffi.Float> block,
);

typedef _dart_syz_contextGetBlock = int Function(
  int context,
  ffi.Pointer<ffi.Float> block,
);

typedef _c_syz_contextEnableEvents = ffi.Int32 Function(
  ffi.Uint64 context,
);

typedef _dart_syz_contextEnableEvents = int Function(
  int context,
);

typedef _c_syz_contextGetNextEvent = ffi.Int32 Function(
  ffi.Pointer<syz_Event> out,
  ffi.Uint64 context,
  ffi.Uint64 flags,
);

typedef _dart_syz_contextGetNextEvent = int Function(
  ffi.Pointer<syz_Event> out,
  int context,
  int flags,
);

typedef syz_StreamOpenCallback = ffi.Int32 Function(
  ffi.Pointer<syz_CustomStreamDef>,
  ffi.Pointer<ffi.Int8>,
  ffi.Pointer<ffi.Int8>,
  ffi.Pointer<ffi.Void>,
  ffi.Pointer<ffi.Void>,
  ffi.Pointer<ffi.Pointer<ffi.Int8>>,
);

typedef _c_syz_registerStreamProtocol = ffi.Int32 Function(
  ffi.Pointer<ffi.Int8> protocol,
  ffi.Pointer<ffi.NativeFunction<syz_StreamOpenCallback>> callback,
  ffi.Pointer<ffi.Void> userdata,
);

typedef _dart_syz_registerStreamProtocol = int Function(
  ffi.Pointer<ffi.Int8> protocol,
  ffi.Pointer<ffi.NativeFunction<syz_StreamOpenCallback>> callback,
  ffi.Pointer<ffi.Void> userdata,
);

typedef _c_syz_createStreamHandleFromStreamParams = ffi.Int32 Function(
  ffi.Pointer<ffi.Uint64> out,
  ffi.Pointer<ffi.Int8> protocol,
  ffi.Pointer<ffi.Int8> path,
  ffi.Pointer<ffi.Void> param,
  ffi.Pointer<ffi.Void> userdata,
  ffi.Pointer<ffi.NativeFunction<syz_UserdataFreeCallback>>
      userdata_free_callback,
);

typedef _dart_syz_createStreamHandleFromStreamParams = int Function(
  ffi.Pointer<ffi.Uint64> out,
  ffi.Pointer<ffi.Int8> protocol,
  ffi.Pointer<ffi.Int8> path,
  ffi.Pointer<ffi.Void> param,
  ffi.Pointer<ffi.Void> userdata,
  ffi.Pointer<ffi.NativeFunction<syz_UserdataFreeCallback>>
      userdata_free_callback,
);

typedef _c_syz_createStreamHandleFromMemory = ffi.Int32 Function(
  ffi.Pointer<ffi.Uint64> out,
  ffi.Uint64 data_len,
  ffi.Pointer<ffi.Int8> data,
  ffi.Pointer<ffi.Void> userdata,
  ffi.Pointer<ffi.NativeFunction<syz_UserdataFreeCallback>>
      userdata_free_callback,
);

typedef _dart_syz_createStreamHandleFromMemory = int Function(
  ffi.Pointer<ffi.Uint64> out,
  int data_len,
  ffi.Pointer<ffi.Int8> data,
  ffi.Pointer<ffi.Void> userdata,
  ffi.Pointer<ffi.NativeFunction<syz_UserdataFreeCallback>>
      userdata_free_callback,
);

typedef _c_syz_createStreamHandleFromFile = ffi.Int32 Function(
  ffi.Pointer<ffi.Uint64> out,
  ffi.Pointer<ffi.Int8> path,
  ffi.Pointer<ffi.Void> userdata,
  ffi.Pointer<ffi.NativeFunction<syz_UserdataFreeCallback>>
      userdata_free_callback,
);

typedef _dart_syz_createStreamHandleFromFile = int Function(
  ffi.Pointer<ffi.Uint64> out,
  ffi.Pointer<ffi.Int8> path,
  ffi.Pointer<ffi.Void> userdata,
  ffi.Pointer<ffi.NativeFunction<syz_UserdataFreeCallback>>
      userdata_free_callback,
);

typedef _c_syz_createStreamHandleFromCustomStream = ffi.Int32 Function(
  ffi.Pointer<ffi.Uint64> out,
  ffi.Pointer<syz_CustomStreamDef> callbacks,
  ffi.Pointer<ffi.Void> userdata,
  ffi.Pointer<ffi.NativeFunction<syz_UserdataFreeCallback>>
      userdata_free_callback,
);

typedef _dart_syz_createStreamHandleFromCustomStream = int Function(
  ffi.Pointer<ffi.Uint64> out,
  ffi.Pointer<syz_CustomStreamDef> callbacks,
  ffi.Pointer<ffi.Void> userdata,
  ffi.Pointer<ffi.NativeFunction<syz_UserdataFreeCallback>>
      userdata_free_callback,
);

typedef _c_syz_createStreamingGeneratorFromStreamParams = ffi.Int32 Function(
  ffi.Pointer<ffi.Uint64> out,
  ffi.Uint64 context,
  ffi.Pointer<ffi.Int8> protocol,
  ffi.Pointer<ffi.Int8> path,
  ffi.Pointer<ffi.Void> param,
  ffi.Pointer<ffi.Void> userdata,
  ffi.Pointer<ffi.NativeFunction<syz_UserdataFreeCallback>>
      userdata_free_callback,
);

typedef _dart_syz_createStreamingGeneratorFromStreamParams = int Function(
  ffi.Pointer<ffi.Uint64> out,
  int context,
  ffi.Pointer<ffi.Int8> protocol,
  ffi.Pointer<ffi.Int8> path,
  ffi.Pointer<ffi.Void> param,
  ffi.Pointer<ffi.Void> userdata,
  ffi.Pointer<ffi.NativeFunction<syz_UserdataFreeCallback>>
      userdata_free_callback,
);

typedef _c_syz_createStreamingGeneratorFromFile = ffi.Int32 Function(
  ffi.Pointer<ffi.Uint64> out,
  ffi.Uint64 context,
  ffi.Pointer<ffi.Int8> path,
  ffi.Pointer<ffi.Void> userdata,
  ffi.Pointer<ffi.NativeFunction<syz_UserdataFreeCallback>>
      userdata_free_callback,
);

typedef _dart_syz_createStreamingGeneratorFromFile = int Function(
  ffi.Pointer<ffi.Uint64> out,
  int context,
  ffi.Pointer<ffi.Int8> path,
  ffi.Pointer<ffi.Void> userdata,
  ffi.Pointer<ffi.NativeFunction<syz_UserdataFreeCallback>>
      userdata_free_callback,
);

typedef _c_syz_createStreamingGeneratorFromStreamHandle = ffi.Int32 Function(
  ffi.Pointer<ffi.Uint64> out,
  ffi.Uint64 context,
  ffi.Uint64 stream,
  ffi.Pointer<ffi.Void> userdata,
  ffi.Pointer<ffi.NativeFunction<syz_UserdataFreeCallback>>
      userdata_free_callback,
);

typedef _dart_syz_createStreamingGeneratorFromStreamHandle = int Function(
  ffi.Pointer<ffi.Uint64> out,
  int context,
  int stream,
  ffi.Pointer<ffi.Void> userdata,
  ffi.Pointer<ffi.NativeFunction<syz_UserdataFreeCallback>>
      userdata_free_callback,
);

typedef _c_syz_createBufferFromStreamParams = ffi.Int32 Function(
  ffi.Pointer<ffi.Uint64> out,
  ffi.Pointer<ffi.Int8> protocol,
  ffi.Pointer<ffi.Int8> path,
  ffi.Pointer<ffi.Void> param,
  ffi.Pointer<ffi.Void> userdata,
  ffi.Pointer<ffi.NativeFunction<syz_UserdataFreeCallback>>
      userdata_free_callback,
);

typedef _dart_syz_createBufferFromStreamParams = int Function(
  ffi.Pointer<ffi.Uint64> out,
  ffi.Pointer<ffi.Int8> protocol,
  ffi.Pointer<ffi.Int8> path,
  ffi.Pointer<ffi.Void> param,
  ffi.Pointer<ffi.Void> userdata,
  ffi.Pointer<ffi.NativeFunction<syz_UserdataFreeCallback>>
      userdata_free_callback,
);

typedef _c_syz_createBufferFromEncodedData = ffi.Int32 Function(
  ffi.Pointer<ffi.Uint64> out,
  ffi.Uint64 data_len,
  ffi.Pointer<ffi.Int8> data,
  ffi.Pointer<ffi.Void> userdata,
  ffi.Pointer<ffi.NativeFunction<syz_UserdataFreeCallback>>
      userdata_free_callback,
);

typedef _dart_syz_createBufferFromEncodedData = int Function(
  ffi.Pointer<ffi.Uint64> out,
  int data_len,
  ffi.Pointer<ffi.Int8> data,
  ffi.Pointer<ffi.Void> userdata,
  ffi.Pointer<ffi.NativeFunction<syz_UserdataFreeCallback>>
      userdata_free_callback,
);

typedef _c_syz_createBufferFromFloatArray = ffi.Int32 Function(
  ffi.Pointer<ffi.Uint64> out,
  ffi.Uint32 sr,
  ffi.Uint32 channels,
  ffi.Uint64 frames,
  ffi.Pointer<ffi.Float> data,
  ffi.Pointer<ffi.Void> userdata,
  ffi.Pointer<ffi.NativeFunction<syz_UserdataFreeCallback>>
      userdata_free_callback,
);

typedef _dart_syz_createBufferFromFloatArray = int Function(
  ffi.Pointer<ffi.Uint64> out,
  int sr,
  int channels,
  int frames,
  ffi.Pointer<ffi.Float> data,
  ffi.Pointer<ffi.Void> userdata,
  ffi.Pointer<ffi.NativeFunction<syz_UserdataFreeCallback>>
      userdata_free_callback,
);

typedef _c_syz_createBufferFromFile = ffi.Int32 Function(
  ffi.Pointer<ffi.Uint64> out,
  ffi.Pointer<ffi.Int8> path,
  ffi.Pointer<ffi.Void> userdata,
  ffi.Pointer<ffi.NativeFunction<syz_UserdataFreeCallback>>
      userdata_free_callback,
);

typedef _dart_syz_createBufferFromFile = int Function(
  ffi.Pointer<ffi.Uint64> out,
  ffi.Pointer<ffi.Int8> path,
  ffi.Pointer<ffi.Void> userdata,
  ffi.Pointer<ffi.NativeFunction<syz_UserdataFreeCallback>>
      userdata_free_callback,
);

typedef _c_syz_createBufferFromStreamHandle = ffi.Int32 Function(
  ffi.Pointer<ffi.Uint64> out,
  ffi.Uint64 stream,
  ffi.Pointer<ffi.Void> userdata,
  ffi.Pointer<ffi.NativeFunction<syz_UserdataFreeCallback>>
      userdata_free_callback,
);

typedef _dart_syz_createBufferFromStreamHandle = int Function(
  ffi.Pointer<ffi.Uint64> out,
  int stream,
  ffi.Pointer<ffi.Void> userdata,
  ffi.Pointer<ffi.NativeFunction<syz_UserdataFreeCallback>>
      userdata_free_callback,
);

typedef _c_syz_bufferGetChannels = ffi.Int32 Function(
  ffi.Pointer<ffi.Uint32> out,
  ffi.Uint64 buffer,
);

typedef _dart_syz_bufferGetChannels = int Function(
  ffi.Pointer<ffi.Uint32> out,
  int buffer,
);

typedef _c_syz_bufferGetLengthInSamples = ffi.Int32 Function(
  ffi.Pointer<ffi.Uint32> out,
  ffi.Uint64 buffer,
);

typedef _dart_syz_bufferGetLengthInSamples = int Function(
  ffi.Pointer<ffi.Uint32> out,
  int buffer,
);

typedef _c_syz_bufferGetLengthInSeconds = ffi.Int32 Function(
  ffi.Pointer<ffi.Double> out,
  ffi.Uint64 buffer,
);

typedef _dart_syz_bufferGetLengthInSeconds = int Function(
  ffi.Pointer<ffi.Double> out,
  int buffer,
);

typedef _c_syz_createBufferGenerator = ffi.Int32 Function(
  ffi.Pointer<ffi.Uint64> out,
  ffi.Uint64 context,
  ffi.Pointer<ffi.Void> userdata,
  ffi.Pointer<ffi.NativeFunction<syz_UserdataFreeCallback>>
      userdata_free_callback,
);

typedef _dart_syz_createBufferGenerator = int Function(
  ffi.Pointer<ffi.Uint64> out,
  int context,
  ffi.Pointer<ffi.Void> userdata,
  ffi.Pointer<ffi.NativeFunction<syz_UserdataFreeCallback>>
      userdata_free_callback,
);

typedef _c_syz_sourceAddGenerator = ffi.Int32 Function(
  ffi.Uint64 source,
  ffi.Uint64 generator,
);

typedef _dart_syz_sourceAddGenerator = int Function(
  int source,
  int generator,
);

typedef _c_syz_sourceRemoveGenerator = ffi.Int32 Function(
  ffi.Uint64 source,
  ffi.Uint64 generator,
);

typedef _dart_syz_sourceRemoveGenerator = int Function(
  int source,
  int generator,
);

typedef _c_syz_createDirectSource = ffi.Int32 Function(
  ffi.Pointer<ffi.Uint64> out,
  ffi.Uint64 context,
  ffi.Pointer<ffi.Void> userdata,
  ffi.Pointer<ffi.NativeFunction<syz_UserdataFreeCallback>>
      userdata_free_callback,
);

typedef _dart_syz_createDirectSource = int Function(
  ffi.Pointer<ffi.Uint64> out,
  int context,
  ffi.Pointer<ffi.Void> userdata,
  ffi.Pointer<ffi.NativeFunction<syz_UserdataFreeCallback>>
      userdata_free_callback,
);

typedef _c_syz_createPannedSource = ffi.Int32 Function(
  ffi.Pointer<ffi.Uint64> out,
  ffi.Uint64 context,
  ffi.Pointer<ffi.Void> userdata,
  ffi.Pointer<ffi.NativeFunction<syz_UserdataFreeCallback>>
      userdata_free_callback,
);

typedef _dart_syz_createPannedSource = int Function(
  ffi.Pointer<ffi.Uint64> out,
  int context,
  ffi.Pointer<ffi.Void> userdata,
  ffi.Pointer<ffi.NativeFunction<syz_UserdataFreeCallback>>
      userdata_free_callback,
);

typedef _c_syz_createSource3D = ffi.Int32 Function(
  ffi.Pointer<ffi.Uint64> out,
  ffi.Uint64 context,
  ffi.Pointer<ffi.Void> userdata,
  ffi.Pointer<ffi.NativeFunction<syz_UserdataFreeCallback>>
      userdata_free_callback,
);

typedef _dart_syz_createSource3D = int Function(
  ffi.Pointer<ffi.Uint64> out,
  int context,
  ffi.Pointer<ffi.Void> userdata,
  ffi.Pointer<ffi.NativeFunction<syz_UserdataFreeCallback>>
      userdata_free_callback,
);

typedef _c_syz_createNoiseGenerator = ffi.Int32 Function(
  ffi.Pointer<ffi.Uint64> out,
  ffi.Uint64 context,
  ffi.Uint32 channels,
  ffi.Pointer<ffi.Void> userdata,
  ffi.Pointer<ffi.NativeFunction<syz_UserdataFreeCallback>>
      userdata_free_callback,
);

typedef _dart_syz_createNoiseGenerator = int Function(
  ffi.Pointer<ffi.Uint64> out,
  int context,
  int channels,
  ffi.Pointer<ffi.Void> userdata,
  ffi.Pointer<ffi.NativeFunction<syz_UserdataFreeCallback>>
      userdata_free_callback,
);

typedef _c_syz_initRouteConfig = ffi.Int32 Function(
  ffi.Pointer<syz_RouteConfig> cfg,
);

typedef _dart_syz_initRouteConfig = int Function(
  ffi.Pointer<syz_RouteConfig> cfg,
);

typedef _c_syz_routingConfigRoute = ffi.Int32 Function(
  ffi.Uint64 context,
  ffi.Uint64 output,
  ffi.Uint64 input,
  ffi.Pointer<syz_RouteConfig> config,
);

typedef _dart_syz_routingConfigRoute = int Function(
  int context,
  int output,
  int input,
  ffi.Pointer<syz_RouteConfig> config,
);

typedef _c_syz_routingRemoveRoute = ffi.Int32 Function(
  ffi.Uint64 context,
  ffi.Uint64 output,
  ffi.Uint64 input,
  ffi.Double fade_out,
);

typedef _dart_syz_routingRemoveRoute = int Function(
  int context,
  int output,
  int input,
  double fade_out,
);

typedef _c_syz_effectReset = ffi.Int32 Function(
  ffi.Uint64 effect,
);

typedef _dart_syz_effectReset = int Function(
  int effect,
);

typedef _c_syz_createGlobalEcho = ffi.Int32 Function(
  ffi.Pointer<ffi.Uint64> out,
  ffi.Uint64 context,
  ffi.Pointer<ffi.Void> userdata,
  ffi.Pointer<ffi.NativeFunction<syz_UserdataFreeCallback>>
      userdata_free_callback,
);

typedef _dart_syz_createGlobalEcho = int Function(
  ffi.Pointer<ffi.Uint64> out,
  int context,
  ffi.Pointer<ffi.Void> userdata,
  ffi.Pointer<ffi.NativeFunction<syz_UserdataFreeCallback>>
      userdata_free_callback,
);

typedef _c_syz_globalEchoSetTaps = ffi.Int32 Function(
  ffi.Uint64 handle,
  ffi.Uint32 n_taps,
  ffi.Pointer<syz_EchoTapConfig> taps,
);

typedef _dart_syz_globalEchoSetTaps = int Function(
  int handle,
  int n_taps,
  ffi.Pointer<syz_EchoTapConfig> taps,
);

typedef _c_syz_createGlobalFdnReverb = ffi.Int32 Function(
  ffi.Pointer<ffi.Uint64> out,
  ffi.Uint64 context,
  ffi.Pointer<ffi.Void> userdata,
  ffi.Pointer<ffi.NativeFunction<syz_UserdataFreeCallback>>
      userdata_free_callback,
);

typedef _dart_syz_createGlobalFdnReverb = int Function(
  ffi.Pointer<ffi.Uint64> out,
  int context,
  ffi.Pointer<ffi.Void> userdata,
  ffi.Pointer<ffi.NativeFunction<syz_UserdataFreeCallback>>
      userdata_free_callback,
);

typedef syz_StreamReadCallback = ffi.Int32 Function(
  ffi.Pointer<ffi.Uint64>,
  ffi.Uint64,
  ffi.Pointer<ffi.Int8>,
  ffi.Pointer<ffi.Void>,
  ffi.Pointer<ffi.Pointer<ffi.Int8>>,
);

typedef syz_StreamSeekCallback = ffi.Int32 Function(
  ffi.Uint64,
  ffi.Pointer<ffi.Void>,
  ffi.Pointer<ffi.Pointer<ffi.Int8>>,
);

typedef syz_StreamCloseCallback = ffi.Int32 Function(
  ffi.Pointer<ffi.Void>,
  ffi.Pointer<ffi.Pointer<ffi.Int8>>,
);

typedef syz_StreamDestroyCallback = ffi.Void Function(
  ffi.Pointer<ffi.Void>,
);
